<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ddd on tobiwan.dev</title><link>https://ttyobiwan.github.io/tags/ddd/</link><description>Recent content in Ddd on tobiwan.dev</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Â© 2025 Piotr Tobiasz</copyright><lastBuildDate>Tue, 28 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://ttyobiwan.github.io/tags/ddd/index.xml" rel="self" type="application/rss+xml"/><item><title>Practical Introduction to Domain-Driven Design</title><link>https://ttyobiwan.github.io/articles/ddd-intro/</link><pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate><guid>https://ttyobiwan.github.io/articles/ddd-intro/</guid><description>&lt;p&gt;It should not be innovative to say that writing software is not merely about writing code - it is about solving a particular problem. Even though it&amp;rsquo;s developers who eventually implement the solution, it is not developers who define what is the problem in the first place. That task is carried out by various business people, who consider processes, risks, and outcomes to describe what the problem is, why it exists, and how it should be addressed. In a domain-driven context, these business people are referred to as &lt;em&gt;Domain Experts&lt;/em&gt;.&lt;/p&gt;</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://ttyobiwan.github.io/articles/ddd-intro/featured.png"/></item></channel></rss>